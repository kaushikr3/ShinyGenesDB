#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(DBI)
library(RSQLite)

# Define UI for application that draws a histogram
ui <- fluidPage(
  titlePanel("Uploading Files"),
  
  # Sidebar layout with input and output definitions ----
  sidebarLayout(
    
    # Sidebar panel for inputs ----
    sidebarPanel(
      
      # Input: Select a file ----
      fileInput("file1", "Choose File",
                multiple = TRUE
      ),
      
      # Horizontal line ----
      tags$hr(),
      
      # Input: Checkbox if file has header ----
      checkboxInput("header", "Header", TRUE),
      
      # Input: Select separator ----
      radioButtons("sep", "Separator",
                   choices = c(Comma = ",",
                               Semicolon = ";",
                               Tab = "\t"),
                   selected = ","),
      
      # Input: Select number of rows to display ----
      radioButtons("disp", "Display",
                   choices = c(Head = "head",
                               All = "all"),
                   selected = "head"),
       
      # buttons to view certain results 
      actionButton("view", "View Data"),
      
      actionButton("create", "Create Table"),
      
      #actionButton("db", "Update DB"),
      
      #text box for giving a query
      textInput("name", "Give a name for the database", value = ""),
      textInput("query", "Write a query to get data from DB", value = "")
      
    ),
    
    # Main panel for displaying outputs ----
    mainPanel(
      
      # Output: Data file ----
      
      tableOutput("contents"),
      tableOutput("table"),
      #tableOutput("viewdb")
    )
  )
)

# Define server logic required to show contents of uploaded file
server <- function(input, output) {
  
  viewdata = eventReactive(input$view,
                           viewdata_func(input)
                           )
  
  #display the uploaded dataframe df
  output$contents <- renderTable({
    viewdata()
  })
  
  #create a table using an action button
  create = eventReactive(input$create,
                         createtable_func(input)
                         )
  
  #display the created table
  output$table <- renderTable({
    create()
  })
  
}
# Run the application 
shinyApp(ui = ui, server = server)









